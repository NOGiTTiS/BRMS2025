<?php
class BookingController extends Controller
{
    private $bookingModel;
    private $roomModel;
    private $equipmentModel;

    public function __construct()
    {
        $this->bookingModel   = $this->model('Booking');
        $this->roomModel      = $this->model('Room');
        $this->equipmentModel = $this->model('Equipment');
    }

    // ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
    public function index(){
        // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô: ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        if(!isLoggedIn() || $_SESSION['user_role'] !== 'admin'){
            header('location: ' . URLROOT . '/dashboard');
            exit();
        }

        $bookings = $this->bookingModel->getAllBookings();
        $data = [
            'title' => '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
            'active_menu' => 'manage_bookings',
            'bookings' => $bookings
        ];
        $this->view('bookings/index', $data);
    }

    public function show($id){
        // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô: ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        if(!isLoggedIn() || $_SESSION['user_role'] !== 'admin'){
            header('location: ' . URLROOT . '/dashboard');
            exit();
        }
            $booking = $this->bookingModel->getBookingById($id);
    
        if(!$booking){
            // ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤ booking ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            header('location: ' . URLROOT . '/booking');
            exit();
        }

        $data = [
            'title' => '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á',
            'active_menu' => 'manage_bookings',
            'booking' => $booking
        ];

        $this->view('bookings/show', $data);
    }

    // ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô API Endpoint
    public function getEvents()
    {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏≤‡∏Å Model
        $bookings = $this->bookingModel->getApprovedBookings();

        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î header ‡πÉ‡∏´‡πâ response ‡πÄ‡∏õ‡πá‡∏ô JSON
        header('Content-Type: application/json');

        // ‡πÅ‡∏õ‡∏•‡∏á array ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ
        echo json_encode($bookings);
    }

    // ‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
    public function create()
    {
        // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô: ‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ
        if (! isLoggedIn()) {
            header('location: ' . URLROOT . '/user/login');
            exit();
        }

        if($_SERVER['REQUEST_METHOD'] == 'POST'){
            // 1. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
            $uploadedFileName = FileHelper::upload($_FILES['room_layout_image']);
            $layout_err = '';
            if (is_array($uploadedFileName) && isset($uploadedFileName['error'])) {
                $layout_err = $uploadedFileName['error'];
                $uploadedFileName = null;
            }

            // 2. ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• POST
            $sanitized_post = [];
            foreach($_POST as $key => $value){
                if (!is_array($value)) {
                    $sanitized_post[$key] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');
                } else {
                    $sanitized_post[$key] = $value;
                }
            }

            // 3. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö View (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î Error)
            $data = [
                'rooms' => $this->roomModel->getRooms(),
                'all_equipments' => $this->equipmentModel->getEquipments(),
                'room_id' => trim($sanitized_post['room_id']),
                'subject' => trim($sanitized_post['subject']),
                'department' => trim($sanitized_post['department']),
                'phone' => trim($sanitized_post['phone']),
                'attendees' => trim($sanitized_post['attendees']),
                'start_date' => trim($sanitized_post['start_date']),
                'start_time' => trim($sanitized_post['start_time']),
                'end_date' => trim($sanitized_post['end_date']),
                'end_time' => trim($sanitized_post['end_time']),
                'note' => trim($sanitized_post['note']),
                'equipments' => isset($sanitized_post['equipments']) ? $sanitized_post['equipments'] : [],
                'title' => '‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°',
                'subject_err' => '',
                'room_id_err' => '',
                'layout_err' => $layout_err,
            ];

            // 4. Validation
            $data['subject_err'] = '';
            $data['room_id_err'] = '';
            $data['date_err'] = '';

            if(empty($data['subject'])){ $data['subject_err'] = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°'; }
            if(empty($data['room_id'])){ $data['room_id_err'] = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°'; }

            // --- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô) ---
            if($_SESSION['user_role'] === 'user'){
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤
                $advanceDays = (int)setting('booking_advance_days', 1);
                $minBookingDate = date('Y-m-d', strtotime("+$advanceDays days"));
                if($data['start_date'] < $minBookingDate){
                    $data['date_err'] = '‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ ' . $advanceDays . ' ‡∏ß‡∏±‡∏ô';
                }

                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î
                $allowWeekend = setting('allow_weekend_booking', '0');
                if($allowWeekend === '0' && empty($data['date_err'])){ // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ error ‡πÅ‡∏£‡∏Å
                    $dayOfWeek = date('w', strtotime($data['start_date'])); // 0=Sun, 6=Sat
                    if($dayOfWeek == 0 || $dayOfWeek == 6){
                        $data['date_err'] = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡πÑ‡∏î‡πâ';
                    }
                }
            }
            // --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏° ---

            // --- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ã‡πâ‡∏≠‡∏ô ---
            if(empty($data['room_id_err']) && !empty($data['start_date']) && !empty($data['start_time']) && !empty($data['end_date']) && !empty($data['end_time'])){
                
                // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ DATETIME ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô
                $full_start_time = $data['start_date'] . ' ' . $data['start_time'];
                $full_end_time = $data['end_date'] . ' ' . $data['end_time'];

                // 2. ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÉ‡∏´‡πâ Model ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
                if(!$this->bookingModel->isTimeSlotAvailable($data['room_id'], $full_start_time, $full_end_time)){
                    $data['room_id_err'] = '‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà';
                }
            }

            // 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ error
            if(empty($data['subject_err']) && empty($data['room_id_err']) && empty($data['layout_err'])){
                
                // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ---
                // 6. ‡∏™‡∏£‡πâ‡∏≤‡∏á Array ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ Model ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞
                $bookingDataToSave = [
                    'user_id' => $_SESSION['user_id'],
                    'room_id' => $data['room_id'],
                    'subject' => $data['subject'],
                    'department' => $data['department'],
                    'phone' => $data['phone'],
                    'attendees' => $data['attendees'],
                    'start_time' => $data['start_date'] . ' ' . $data['start_time'],
                    'end_time' => $data['end_date'] . ' ' . $data['end_time'],
                    'note' => $data['note'],
                    'equipments' => $data['equipments'],
                    'room_layout_image' => $uploadedFileName
                ];

                
                // 7. ‡∏™‡πà‡∏á‡πÅ‡∏Ñ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÉ‡∏´‡πâ Model
                // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Model
                $newBookingId = $this->bookingModel->createBooking($bookingDataToSave);

                if($newBookingId){
                    // --- ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Telegram ---
                    $room = $this->roomModel->getRoomById($bookingDataToSave['room_id']);
                    $room_name = $room ? $room->name : 'N/A';
                    
                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Tag HTML ‡∏Ç‡∏≠‡∏á Telegram
                    $message  = "üîî <b>‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</b> üîî\n\n";
                    $message .= "<b>‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠:</b> " . htmlspecialchars($bookingDataToSave['subject']) . "\n";
                    $message .= "<b>‡∏´‡πâ‡∏≠‡∏á:</b> " . htmlspecialchars($room_name) . "\n";
                    $message .= "<b>‡πÄ‡∏ß‡∏•‡∏≤:</b> " . date('d/m/Y H:i', strtotime($bookingDataToSave['start_time'])) . "\n";
                    $message .= "<b>‡πÇ‡∏î‡∏¢:</b> " . htmlspecialchars($_SESSION['user_name']) . "\n\n";
                    // ‡∏î‡∏∂‡∏á Public URL ‡∏à‡∏≤‡∏Å Setting
                    $publicUrl = setting('public_url', URLROOT); // ‡πÉ‡∏ä‡πâ URLROOT ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡∏£‡∏≠‡∏á
                    $detailsLink = $publicUrl . "/booking/show/" . $newBookingId;

                    $message .= "<a href='" . $detailsLink . "'>‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</a>";
                    
                    // ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                    NotificationHelper::sendTelegram($message);

                    // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏≤‡∏á‡πÜ ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á type ‡πÄ‡∏õ‡πá‡∏ô success
                    flash('notification', '‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß', 'success');
                    
                    header('location: ' . URLROOT . '/mybooking');
                    exit();
                } else {
                    die('Something went wrong');
                }
            } else {
                $this->view('bookings/create', $data);
            }
        } else {
            // ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
            $rooms      = $this->roomModel->getRooms();
            $equipments = $this->equipmentModel->getEquipments();

            $data = [
                'title'          => '‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°',
                'active_menu'    => 'booking',
                'rooms'          => $rooms,
                'all_equipments' => $equipments,
                // ... initial empty fields
                'room_id'        => '', 'subject'     => '', 'department' => '', 'phone'    => '', 'attendees' => '',
                'start_date'     => '', 'start_time'  => '', 'end_date'   => '', 'end_time' => '', 'note'      => '',
                'equipments'     => [],
                'subject_err'    => '', 'room_id_err' => '',
                // ...
            ];
            $this->view('bookings/create', $data);
        }
    }

    // ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
    public function approve($id){
        if(!isLoggedIn() || $_SESSION['user_role'] !== 'admin'){
            header('location: ' . URLROOT . '/dashboard');
            exit();
        }
        if($_SERVER['REQUEST_METHOD'] == 'POST'){
            if($this->bookingModel->approveBooking($id, $_SESSION['user_id'])){
                flash('booking_manage_message', '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'swal-success');
                header('location: ' . URLROOT . '/booking');
            } else {
                die('Something went wrong');
            }
        } else {
            header('location: ' . URLROOT . '/booking');
        }
    }

    // ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
    public function reject($id){
        if(!isLoggedIn() || $_SESSION['user_role'] !== 'admin'){
            header('location: ' . URLROOT . '/dashboard');
            exit();
        }
        if($_SERVER['REQUEST_METHOD'] == 'POST'){
            if($this->bookingModel->rejectBooking($id, $_SESSION['user_id'])){
                flash('booking_manage_message', '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢', 'swal-success');
                header('location: ' . URLROOT . '/booking');
            } else {
                die('Something went wrong');
            }
        } else {
            header('location: ' . URLROOT . '/booking');
        }
    }

    // ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
    public function edit($id){
        if(!isLoggedIn() || $_SESSION['user_role'] !== 'admin'){
            header('location: ' . URLROOT . '/dashboard');
            exit();
        }

        if($_SERVER['REQUEST_METHOD'] == 'POST'){
            // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ htmlspecialchars
            $sanitized_post = [];
            foreach($_POST as $key => $value){
                if (!is_array($value)) {
                    $sanitized_post[$key] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');
                } else {
                    $sanitized_post[$key] = $value;
                }
            }
            // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà)
            $newImageName = null;
            if (isset($_FILES['room_layout_image']) && $_FILES['room_layout_image']['error'] === UPLOAD_ERR_OK) {
                $newImageName = FileHelper::upload($_FILES['room_layout_image']);
            }

            $data = [
                'id' => $id,
                'room_id' => trim($sanitized_post['room_id']),
                'subject' => trim($sanitized_post['subject']),
                'department' => trim($sanitized_post['department']),
                'phone' => trim($sanitized_post['phone']),
                'attendees' => trim($sanitized_post['attendees']),
                'start_time' => trim($sanitized_post['start_date']) . ' ' . trim($sanitized_post['start_time']),
                'end_time' => trim($sanitized_post['end_date']) . ' ' . trim($sanitized_post['end_time']),
                'note' => trim($sanitized_post['note']),
                'equipments' => isset($sanitized_post['equipments']) ? $sanitized_post['equipments'] : [],
                'room_layout_image' => $newImageName, // ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠ null
                'existing_layout_image' => trim($sanitized_post['existing_layout_image']), // ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
            ];
            
            // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
            if(is_null($data['room_layout_image'])){
                $data['room_layout_image'] = $data['existing_layout_image'];
            }

            // Validation (‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô)
            if(empty($data['subject'])){
                // ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞ redirect ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏° error message
                die('Subject is required.');
            }

            if($this->bookingModel->updateBooking($data)){
                flash('booking_manage_message', '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'swal-success');
                header('location: ' . URLROOT . '/booking/show/' . $id);
            } else {
                die('Something went wrong during update');
            }

        } else {
            $booking = $this->bookingModel->getBookingById($id);
            // ‡∏î‡∏∂‡∏á ID ‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß
            $selectedEquipments = $this->bookingModel->getSelectedEquipments($id);

            $data = [
                'title' => '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á',
                'active_menu' => 'manage_bookings',
                'booking' => $booking,
                'rooms' => $this->roomModel->getRooms(),
                'all_equipments' => $this->equipmentModel->getEquipments(),
                'selected_equipments' => $selectedEquipments
            ];
            $this->view('bookings/edit', $data);
        }
    }

    // ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
    public function delete($id){
        if(!isLoggedIn() || $_SESSION['user_role'] !== 'admin'){
            header('location: ' . URLROOT . '/dashboard');
            exit();
        }

        if($_SERVER['REQUEST_METHOD'] == 'POST'){
            // ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if($this->bookingModel->deleteBooking($id)){
                flash('booking_manage_message', '‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'swal-success');
                header('location: ' . URLROOT . '/booking');
            } else {
                die('Something went wrong during deletion');
            }
        } else {
            header('location: ' . URLROOT . '/booking');
        }
    }
}
